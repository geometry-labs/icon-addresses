// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: log_count_by_block_number.proto

package models

import (
	_ "github.com/infobloxopen/protoc-gen-gorm/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogCountByBlockNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionHash       string `protobuf:"bytes,1,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash"`
	LogIndex              uint64 `protobuf:"varint,2,opt,name=log_index,json=logIndex,proto3" json:"log_index"`
	BlockNumber           uint64 `protobuf:"varint,3,opt,name=block_number,json=blockNumber,proto3" json:"block_number"`
	Count                 uint32 `protobuf:"varint,4,opt,name=count,proto3" json:"count"`
	MaxCountByTransaction uint32 `protobuf:"varint,5,opt,name=max_count_by_transaction,json=maxCountByTransaction,proto3" json:"max_count_by_transaction"`
}

func (x *LogCountByBlockNumber) Reset() {
	*x = LogCountByBlockNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_log_count_by_block_number_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogCountByBlockNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogCountByBlockNumber) ProtoMessage() {}

func (x *LogCountByBlockNumber) ProtoReflect() protoreflect.Message {
	mi := &file_log_count_by_block_number_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogCountByBlockNumber.ProtoReflect.Descriptor instead.
func (*LogCountByBlockNumber) Descriptor() ([]byte, []int) {
	return file_log_count_by_block_number_proto_rawDescGZIP(), []int{0}
}

func (x *LogCountByBlockNumber) GetTransactionHash() string {
	if x != nil {
		return x.TransactionHash
	}
	return ""
}

func (x *LogCountByBlockNumber) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *LogCountByBlockNumber) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *LogCountByBlockNumber) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *LogCountByBlockNumber) GetMaxCountByTransaction() uint32 {
	if x != nil {
		return x.MaxCountByTransaction
	}
	return 0
}

var File_log_count_by_block_number_proto protoreflect.FileDescriptor

var file_log_count_by_block_number_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x6c, 0x6f, 0x67, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x62, 0x79, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x1a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x6f, 0x70,
	0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x67, 0x6f,
	0x72, 0x6d, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x72, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcb, 0x02, 0x0a, 0x15, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x33, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0xb9, 0x19, 0x04, 0x0a,
	0x02, 0x28, 0x01, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x25, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x08, 0xba, 0xb9, 0x19, 0x04, 0x0a, 0x02, 0x28,
	0x01, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x53, 0x0a, 0x0c, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x30, 0xba, 0xb9, 0x19, 0x2c, 0x0a, 0x2a, 0x52, 0x28, 0x6c, 0x6f, 0x67, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x62, 0x79, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x78, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x40, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x2a, 0xba, 0xb9, 0x19, 0x26, 0x0a, 0x24, 0x52, 0x22, 0x6c, 0x6f, 0x67, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x62, 0x79, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x78, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x37, 0x0a, 0x18, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x62, 0x79, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x06, 0xba, 0xb9, 0x19,
	0x02, 0x08, 0x01, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_log_count_by_block_number_proto_rawDescOnce sync.Once
	file_log_count_by_block_number_proto_rawDescData = file_log_count_by_block_number_proto_rawDesc
)

func file_log_count_by_block_number_proto_rawDescGZIP() []byte {
	file_log_count_by_block_number_proto_rawDescOnce.Do(func() {
		file_log_count_by_block_number_proto_rawDescData = protoimpl.X.CompressGZIP(file_log_count_by_block_number_proto_rawDescData)
	})
	return file_log_count_by_block_number_proto_rawDescData
}

var file_log_count_by_block_number_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_log_count_by_block_number_proto_goTypes = []interface{}{
	(*LogCountByBlockNumber)(nil), // 0: models.LogCountByBlockNumber
}
var file_log_count_by_block_number_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_log_count_by_block_number_proto_init() }
func file_log_count_by_block_number_proto_init() {
	if File_log_count_by_block_number_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_log_count_by_block_number_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogCountByBlockNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_log_count_by_block_number_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_log_count_by_block_number_proto_goTypes,
		DependencyIndexes: file_log_count_by_block_number_proto_depIdxs,
		MessageInfos:      file_log_count_by_block_number_proto_msgTypes,
	}.Build()
	File_log_count_by_block_number_proto = out.File
	file_log_count_by_block_number_proto_rawDesc = nil
	file_log_count_by_block_number_proto_goTypes = nil
	file_log_count_by_block_number_proto_depIdxs = nil
}
